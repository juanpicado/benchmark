---
name: ci - benchmark

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */4 * * *'
  push:
    - main
  
permissions:
  contents: write

jobs:
  prepare: 
    name: Prepare build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3
      - name: Node
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3
        with:
          node-version-file: '.nvmrc'
      - name: Install pnpm
        run: |
          corepack enable
          corepack prepare --activate pnpm@latest
      - name: set store
        run: | 
          mkdir ~/.pnpm-store
          pnpm config set store-dir ~/.pnpm-store     
      - uses: cardinalby/export-env-action@v1
        with:
          envFile: 'constants.env'    
          expand: 'true'          
      - name: install dependencies
        run: pnpm install
      - name: Cache .pnpm-store
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # tag=v3
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-              
  benchmark-auto:
    needs: prepare
    strategy:
      fail-fast: true
      matrix:
        benchmark:
          - info
          - tarball
        verdaccioVersion:
          - 3.13.1
          - 4.12.2
          - 5.18.0
          - 6-next
    name: Benchmark autocannon
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3
      - uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3
        with:
          node-version-file: '.nvmrc'
      - name: Install pnpm
        run: |
          corepack enable
          corepack prepare --activate pnpm@latest
      - uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # tag=v3
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ hashFiles('pnpm-lock.yaml') }}   
      - name: install dependencies
        run: pnpm install    
      - uses: cardinalby/export-env-action@v1
        with:
          envFile: 'constants.env'    
          expand: 'true'            
      - name: start registry
        run: ./scripts/benchmark-prepare.sh ${{matrix.verdaccioVersion}}    
      - name: benchmark        
        run: pnpm benchmark:api -v ${{matrix.verdaccioVersion}} -f ${{matrix.benchmark}} -c ${{env.B_CONNECTIONS}}   
        shell: bash
        env:
          DEBUG: metrics*
      - uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # tag=v3
        with:
          name: autocannon
          path: ./api-results-${{matrix.verdaccioVersion}}-${{matrix.benchmark}}.json  
          if-no-files-found: error
          retention-days: 10 
  benchmark-hyper:
    needs: prepare
    strategy:
      fail-fast: true
      matrix:
        benchmark:
          - info
          - tarball
        verdaccioVersion:
          # future 6.x (wip)
          # - local (master branch)
          # old versions to compare same test along previous releases
          - 3.13.1
          - 4.12.2
          - 5.18.0
          - 6-next
    name: Benchmark hyperfine
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3
      - uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3
        with:
          node-version-file: '.nvmrc'
      - name: Install pnpm
        run: |
          corepack enable
          corepack prepare --activate pnpm@latest
      - uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # tag=v3
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ hashFiles('pnpm-lock.yaml') }}   
      - name: install dependencies
        run: pnpm install
      - uses: cardinalby/export-env-action@v1
        with:
          envFile: 'constants.env'    
          expand: 'true'          
      - name: install hyperfine
        run: |
          wget https://github.com/sharkdp/hyperfine/releases/download/v1.15.0/hyperfine_1.15.0_amd64.deb
          sudo dpkg -i hyperfine_1.15.0_amd64.deb
      - name: start registry
        run: ./scripts/benchmark-prepare.sh ${{matrix.verdaccioVersion}} ${{env.B_CONNECTIONS}}
      - name: benchmark
        run: ./scripts/benchmark-run.sh ${{matrix.benchmark}} ${{env.B_CONNECTIONS}}
        # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#using-a-specific-shell
        shell: bash
      - name: rename
        run: mv ./hyper-results.json ./hyper-results-${{matrix.verdaccioVersion}}-${{matrix.benchmark}}.json        
      - uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # tag=v3
        with:
          name: hyperfine
          path: ./hyper-results-${{matrix.verdaccioVersion}}-${{matrix.benchmark}}.json
          if-no-files-found: error
          retention-days: 10    
  save:
    needs: [benchmark-hyper, benchmark-auto]
    runs-on: ubuntu-latest
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +%s%3N)"
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
      - uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3
        with:
          node-version-file: '.nvmrc'
      - name: Install pnpm
        run: |
          corepack enable
          corepack prepare --activate pnpm@latest
      - uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # tag=v3
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ hashFiles('pnpm-lock.yaml') }}   
      - name: install dependencies
        run: pnpm install          
      - uses: actions/download-artifact@v3
        with:
          # name: verdaccio-metrics
          path: ./benchmark/${{ steps.date.outputs.date }}
      - name: generate metrics
        run: pnpm generate          
      - name: Commit & Push changes
        uses: actions-js/push@a52398fac807b0c1e5f1492c969b477c8560a0ba # tag=v1.3
        with:
           github_token: ${{ secrets.GITHUB_TOKEN }}
           message: "chore: updated metrics"
           branch: main
